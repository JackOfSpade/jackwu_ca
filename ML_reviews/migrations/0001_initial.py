# Generated by Django 3.0.8 on 2020-08-02 18:37

import ML_reviews.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appliances',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'appliance',
                'verbose_name_plural': 'appliances',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ArtsCraftsAndSewing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'arts, crafts and sewing',
                'verbose_name_plural': 'arts, crafts and sewing',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AudioBooks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'audio book',
                'verbose_name_plural': 'audio books',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Automotive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'automotive',
                'verbose_name_plural': 'automotives',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BeautyProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'beauty product',
                'verbose_name_plural': 'beauty products',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Books',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'book',
                'verbose_name_plural': 'books',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CDsAndVinyl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'CDs and vinyl',
                'verbose_name_plural': 'CDs and vinyl',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CellPhonesAndAccessories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'cell phones and accessories',
                'verbose_name_plural': 'cell phones and accessories',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClothingShoesAndJewelry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'clothing, shoes and jewelry',
                'verbose_name_plural': 'clothing, shoes and jewelry',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DigitalMusic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'digital music',
                'verbose_name_plural': 'digital music',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Electronics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'electronic',
                'verbose_name_plural': 'electronics',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Fashion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'fashion',
                'verbose_name_plural': 'fashion',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GiftCards',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'gift card',
                'verbose_name_plural': 'gift cards',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GroceryAndGourmetFood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'grocery and gourmet food',
                'verbose_name_plural': 'grocery and gourmet food',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HomeAndKitchen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'home and kitchen',
                'verbose_name_plural': 'home and kitchen',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndustrialAndScientificSupplies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'industrial and scientific supplies',
                'verbose_name_plural': 'industrial and scientific supplies',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Magazines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'magazine',
                'verbose_name_plural': 'magazines',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MoviesAndTV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'movies and TV',
                'verbose_name_plural': 'movies and TV',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MusicalInstruments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'musical instrument',
                'verbose_name_plural': 'musical instruments',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OfficeProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'office product',
                'verbose_name_plural': 'office products',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PatioLawnAndGarden',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'patio, lawn and garden',
                'verbose_name_plural': 'patio, lawn and garden',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PetSupplies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'pet supply',
                'verbose_name_plural': 'pet supplies',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Predictors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_name', models.CharField(max_length=100, unique=True)),
                ('theta', models.TextField()),
                ('theta_0', models.TextField()),
                ('avg_accuracy', models.DecimalField(decimal_places=2, max_digits=3, validators=[ML_reviews.models.percentage_validator])),
            ],
            options={
                'verbose_name': 'predictor',
                'verbose_name_plural': 'predictors',
            },
        ),
        migrations.CreateModel(
            name='Software',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'software',
                'verbose_name_plural': 'software',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SportsAndOutdoors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'sport and outdoors',
                'verbose_name_plural': 'sport and outdoors',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ToolsAndHomeImprovement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'tools and home improvement',
                'verbose_name_plural': 'tools and home improvement',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ToysAndBoardGames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'toys and board games',
                'verbose_name_plural': 'toys and board games',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VideoGames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(decimal_places=1, max_digits=2, validators=[ML_reviews.models.rating_validator])),
                ('helpful_votes', models.IntegerField(validators=[ML_reviews.models.helpful_votes_validator])),
                ('review', models.TextField(blank=True, null=True)),
                ('positive', models.BooleanField()),
            ],
            options={
                'verbose_name': 'video game',
                'verbose_name_plural': 'video games',
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='videogames',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='videogames_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='videogames',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='videogames_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='toysandboardgames',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='toysandboardgames_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='toysandboardgames',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='toysandboardgames_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='toolsandhomeimprovement',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='toolsandhomeimprovement_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='toolsandhomeimprovement',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='toolsandhomeimprovement_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='sportsandoutdoors',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='sportsandoutdoors_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='sportsandoutdoors',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='sportsandoutdoors_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='software',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='software_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='software',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='software_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='predictors',
            constraint=models.CheckConstraint(check=models.Q(('avg_accuracy__gte', 0), ('avg_accuracy__lte', 1)), name='predictors_avg_accuracy'),
        ),
        migrations.AddConstraint(
            model_name='petsupplies',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='petsupplies_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='petsupplies',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='petsupplies_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='patiolawnandgarden',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='patiolawnandgarden_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='patiolawnandgarden',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='patiolawnandgarden_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='officeproducts',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='officeproducts_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='officeproducts',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='officeproducts_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='musicalinstruments',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='musicalinstruments_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='musicalinstruments',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='musicalinstruments_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='moviesandtv',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='moviesandtv_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='moviesandtv',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='moviesandtv_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='magazines',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='magazines_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='magazines',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='magazines_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='industrialandscientificsupplies',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='industrialandscientificsupplies_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='industrialandscientificsupplies',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='industrialandscientificsupplies_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='homeandkitchen',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='homeandkitchen_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='homeandkitchen',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='homeandkitchen_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='groceryandgourmetfood',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='groceryandgourmetfood_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='groceryandgourmetfood',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='groceryandgourmetfood_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='giftcards',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='giftcards_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='giftcards',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='giftcards_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='fashion',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='fashion_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='fashion',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='fashion_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='electronics',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='electronics_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='electronics',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='electronics_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='digitalmusic',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='digitalmusic_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='digitalmusic',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='digitalmusic_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='clothingshoesandjewelry',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='clothingshoesandjewelry_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='clothingshoesandjewelry',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='clothingshoesandjewelry_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='cellphonesandaccessories',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='cellphonesandaccessories_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='cellphonesandaccessories',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='cellphonesandaccessories_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='cdsandvinyl',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='cdsandvinyl_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='cdsandvinyl',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='cdsandvinyl_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='books',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='books_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='books',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='books_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='beautyproducts',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='beautyproducts_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='beautyproducts',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='beautyproducts_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='automotive',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='automotive_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='automotive',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='automotive_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='audiobooks',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='audiobooks_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='audiobooks',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='audiobooks_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='artscraftsandsewing',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='artscraftsandsewing_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='artscraftsandsewing',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='artscraftsandsewing_helpful_votes_constraint'),
        ),
        migrations.AddConstraint(
            model_name='appliances',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 1), ('rating__lte', 5)), name='appliances_rating_constraint'),
        ),
        migrations.AddConstraint(
            model_name='appliances',
            constraint=models.CheckConstraint(check=models.Q(helpful_votes__gte=0), name='appliances_helpful_votes_constraint'),
        ),
    ]
